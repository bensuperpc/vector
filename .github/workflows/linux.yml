name: Build and tests

on:
  push:
    branches:
      - '*'
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.platform.os }} ${{ matrix.platform.name }} ${{ matrix.config.name }} ${{ matrix.type.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        # - { name: Windows VS2019, os: windows-2019 }
        # - { name: Windows VS2022, os: windows-2022 }
        - { name: Linux GCC,      os: ubuntu-22.04, flags: -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ }
        - { name: Linux Clang,    os: ubuntu-22.04, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: Linux GCC,      os: ubuntu-20.04, flags: -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ }
        - { name: Linux Clang,    os: ubuntu-20.04, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        # - { name: MacOS XCode,    os: macos-latest }
        config:
        - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }
        type:
        - { name: Release, flags: -DCMAKE_BUILD_TYPE=Release }
        - { name: Debug, flags: -DCMAKE_BUILD_TYPE=Debug }

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get install xorg-dev libglu1-mesa-dev ninja-build -y

    - name: Configure
      run: cmake --preset=base ${{ matrix.platform.flags }} ${{ matrix.type.flags }} ${{ matrix.config.flags }}

    - name: Build
      run: cmake --build build/base

    - name: Test
      run: ctest --output-on-failure --verbose -C Release -j 2 --test-dir build/base